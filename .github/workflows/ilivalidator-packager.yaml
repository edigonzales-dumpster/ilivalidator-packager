name: ili2c
on:
  push:
    # tags:
    #   - "v*"
    branches:
      - 'master'

jobs:

  build-non-windows-image:
    name: 'Build Non-Windows Image'
    # runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        include:
          - os: 'ubuntu-latest'
            label: 'linux'
            package: 'deb'
          - os: 'macos-latest'
            label: 'mac'
            package: 'dmg'
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Download ....'
        run: |
          curl https://github.com/claeis/ilivalidator/releases/download/ilivalidator-1.11.6/ilivalidator-1.11.6.zip -o fubar.zip
      - name: List all files in fubar directory
        run: ls -la  
      - name: 'Setup Java 14'
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: 'Download zipped ilivalidator release.'
        run: |
          ./gradlew unzipFile
      - name: 'Get Version Number'
        run: |
          echo "::set-env name=VERSION::$(./gradlew properties -Drelease -q | grep "version:" | awk '{print $2}')"
      - name: 'Get dependencies (jdeps)'
        run: |
          echo "::set-env name=DEPS::$(jdeps --class-path 'libs/*' --multi-release base -recursive --ignore-missing-deps --print-module-deps ilivalidator-${{env.VERSION}}.jar)"
      - name: 'Create JRE (jlink)'
        run: |
          jlink --add-modules ${{env.DEPS}} --output ilivalidator-jre
      - name: 'Copy main jar to libs'
        run: |
          cp ilivalidator-${{env.VERSION}}.jar libs/
      - name: List all files in libs directory
        run: ls -la libs 
      - name: 'Create package'
        run: |
          jpackage --name ilivalidator --type ${{matrix.package}} --input libs --main-jar ilivalidator-${{env.VERSION}}.jar -d output --runtime-image ilivalidator-jre --app-version ${{env.VERSION}}
      - name: List all files in output directory
        run: ls -la output
