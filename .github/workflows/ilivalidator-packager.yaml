name: ili2c
on:
  push:
    # tags:
    #   - "v*"
    branches:
      - 'master'

jobs:

  build-non-windows-image:
    name: 'Build Non-Windows Image'
    runs-on: ubuntu-latest

    # needs: [build-jar-job]
    # strategy:
    #   matrix:
    #     os: ['ubuntu-latest']
    #     include:
    #       - os: 'ubuntu-latest'
    #         label: 'linux'
    # runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 14'
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: 'Download zipped ilivalidator release.'
        run: |
          ./gradlew unzipFile
      - name: 'Get Version Number'
        run: |
          echo "::set-env name=VERSION::$(./gradlew properties -Drelease -q | grep "version:" | awk '{print $2}')"
      - name: 'Get dependencies (jdeps)'
        run: |
          echo "::set-env name=DEPS::$(jdeps --class-path 'libs/*' --multi-release base -recursive --ignore-missing-deps --print-module-deps ilivalidator-${{env.VERSION}}.jar)"
      - name: 'Create JRE (jlink)'
        run: |
          jlink --add-modules ${{env.DEPS}} --output ilivalidator-jre
      - name: 'Copy main jar to libs'
        run: |
          cp  ilivalidator-${{env.VERSION}}.jar libs/
      - name: List all files in libs directory
        run: ls -la libs 
      - name: 'Create package'
        run: |
          jpackage --name ilivalidator --type deb --input libs --main-jar ilivalidator-${{env.VERSION}}.jar -d output --runtime-image ilivalidator-jre --app-version ${{env.VERSION}}
      - name: List all files in output directory
        run: ls -la output
