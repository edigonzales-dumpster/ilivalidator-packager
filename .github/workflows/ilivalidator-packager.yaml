name: ilivalidator
on:
  push:
    branches:
     - 'master'

env:
  VERSION: 1.11.10

jobs:  
  build:
    #name: 'Build Non-Windows Image'
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'macos-latest', 'windows-latest']
        #os: ['windows-latest']
        include:
          - os: 'ubuntu-20.04'
            label: 'linux'
            package: 'deb'
            icon: 'icon-ilivalidator-128x128.png'
          - os: 'macos-latest'
            label: 'mac'
            package: 'dmg'
            icon: 'icon-ilivalidator-128x128.icns'
          - os: 'windows-latest'
            label: 'win'
            package: 'msi'
            icon: 'icon-ilivalidator-128x128.ico'
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: 'Download zipped ilivalidator release'
        run: |
          curl -L https://downloads.interlis.ch/ilivalidator/ilivalidator-${{env.VERSION}}.zip -o ilivalidator.zip
      - name: 'Unzip ilivalidator release'
        run: |
          unzip ilivalidator.zip
      - name: 'Setup Java 16'
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: 'Get dependencies (jdeps)'
        run: |
          echo "DEPS=$(jdeps --class-path 'libs/*' --multi-release base -recursive --ignore-missing-deps --print-module-deps ilivalidator-${{env.VERSION}}.jar)" >> $GITHUB_ENV
        shell: bash
      - name: 'Create JRE (jlink)'
        run: |
          jlink --add-modules ${{env.DEPS}} --output ilivalidator-jre
      - name: 'Copy main jar to libs'
        run: |
          cp ilivalidator-${{env.VERSION}}.jar libs/
      - name: 'Create package (jpackage)'
        run: |
          jpackage --icon ${{matrix.icon}} --name ilivalidator --type ${{matrix.package}} --input libs --main-jar ilivalidator-${{env.VERSION}}.jar -d output --runtime-image ilivalidator-jre --app-version ${{env.VERSION}} --java-options -Xmx2g 
        shell: bash
      - name: List all files in output directory
        run: ls -la output
        shell: bash
      - name: List all files in project root directory
        run: ls -la 
        shell: bash
      - name: 'Setup Java 8'
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Upload file to bucket
        shell: bash
        run: |
          ./gradlew uploadFile 
        env:
          FILENAME: ilivalidator-${{env.VERSION}}.${{matrix.package}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-central-1"

  # build-windows-image:
  #   name: 'Build Windows Image'
  #   needs: [create-release]
  #   runs-on: windows-latest

  #   steps:
  #     - name: 'Checkout'
  #       uses: actions/checkout@v2
  #     - name: 'Download zipped ilivalidator release'
  #       run: |
  #         curl -L https://github.com/claeis/ilivalidator/releases/download/ilivalidator-${{env.VERSION}}/ilivalidator-${{env.VERSION}}.zip -o ilivalidator.zip
  #       shell: bash
  #     - name: 'Unzip ilivalidator release'
  #       run: |
  #         unzip ilivalidator.zip
  #       shell: bash
  #     - name: 'Setup Java 14'
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 14
  #     - name: 'Get dependencies (jdeps)'
  #       run: |
  #         echo "::set-env name=DEPS::$(jdeps --class-path 'libs/*' --multi-release base -recursive --ignore-missing-deps --print-module-deps ilivalidator-${{env.VERSION}}.jar)"
  #       shell: bash
  #     - name: 'Create JRE (jlink)'
  #       run: |
  #         jlink --add-modules ${{env.DEPS}} --output ilivalidator-jre
  #     - name: 'Copy main jar to libs'
  #       run: |
  #         cp ilivalidator-${{env.VERSION}}.jar libs/
  #     - name: 'Create package (jpackage)'
  #       run: |
  #         jpackage --icon icon-ilivalidator-128x128.ico --name ilivalidator --type msi --input libs --main-jar ilivalidator-${{env.VERSION}}.jar -d output --runtime-image ilivalidator-jre --app-version ${{env.VERSION}}
  #     - name: List all files in output directory
  #       run: ls -la output
  #       shell: bash
  #     - name: 'Get Release URL'
  #       # if: contains(github.ref, 'v')
  #       uses: actions/download-artifact@v2-preview
  #       with:
  #         name: 'upload_url.txt'
  #     - name: 'Get Upload URL'
  #       # if: contains(github.ref, 'v')
  #       run: |
  #         echo "::set-env name=UPLOAD_URL::$(cat upload_url.txt)"
  #     - name: 'Upload Release Asset'
  #       # if: contains(github.ref, 'v')
  #       id: upload-release-asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #       with:
  #         upload_url: ${{env.UPLOAD_URL}}
  #         asset_path: output/ilivalidator-${{env.VERSION}}.msi
  #         asset_name: ilivalidator-${{env.VERSION}}.msi
  #         asset_content_type: application/octet-stream
